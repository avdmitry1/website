# Generated by Django 5.1.4 on 2025-02-26 20:06

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0004_alter_event_options_alter_socialmedialink_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('track_number', models.PositiveSmallIntegerField()),
                ('bpm', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('audio_preview', models.FileField(blank=True, null=True, upload_to='audio/previews/')),
            ],
            options={
                'verbose_name': 'Track',
                'verbose_name_plural': 'Tracks',
                'ordering': ['track_number'],
            },
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'verbose_name': 'Event', 'verbose_name_plural': 'Events'},
        ),
        migrations.RemoveIndex(
            model_name='artist',
            name='artist_name_idx',
        ),
        migrations.RemoveIndex(
            model_name='event',
            name='event_date_index',
        ),
        migrations.RenameField(
            model_name='event',
            old_name='title',
            new_name='name',
        ),
        migrations.RemoveField(
            model_name='release',
            name='artist',
        ),
        migrations.AddField(
            model_name='event',
            name='artists',
            field=models.ManyToManyField(blank=True, related_name='events', to='main.artist'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_url',
            field=models.URLField(default='http://example.com', validators=[django.core.validators.URLValidator(schemes=['http', 'https'])]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='events/'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='podcast',
            name='date',
            field=models.DateField(db_index=True, default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='release',
            name='artists',
            field=models.ManyToManyField(related_name='releases', to='main.artist'),
        ),
        migrations.AddField(
            model_name='release',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='artist',
            name='name',
            field=models.CharField(db_index=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='event',
            name='date',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='podcast',
            name='link',
            field=models.URLField(validators=[django.core.validators.URLValidator(schemes=['http', 'https'])]),
        ),
        migrations.AlterField(
            model_name='release',
            name='title',
            field=models.CharField(db_index=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='socialmedialink',
            name='platform',
            field=models.CharField(choices=[('instagram', 'Instagram'), ('soundcloud', 'SoundCloud'), ('bandcamp', 'Bandcamp'), ('spotify', 'Spotify'), ('facebook', 'Facebook'), ('twitter', 'Twitter'), ('youtube', 'YouTube'), ('beatport', 'Beatport'), ('mixcloud', 'Mixcloud'), ('other', 'Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='socialmedialink',
            name='url',
            field=models.URLField(validators=[django.core.validators.URLValidator(schemes=['http', 'https'])]),
        ),
        migrations.AddField(
            model_name='release',
            name='genres',
            field=models.ManyToManyField(blank=True, related_name='releases', to='main.genre'),
        ),
        migrations.AddField(
            model_name='track',
            name='genres',
            field=models.ManyToManyField(blank=True, related_name='tracks', to='main.genre'),
        ),
        migrations.AddField(
            model_name='track',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='main.release'),
        ),
    ]
